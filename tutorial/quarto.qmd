---
title: "Quarto"
---

## ¿Qué es quarto?
Quarto es un "sistema de publicación". Usando un formato de markdown enriquecido permite generar páginas web, presentaciones, blogs y mucho más. El formato de los archivos es .qmd.

## Formato de texto
El siguiente texto:
```{markdown}
*cursivas*, **negritas**, ***negritas cursivas***,  
~~tachado~~, superíndice^2^, subíndice~2~, `verbatim`   
```
se mostrará así:  
*cursivas*, **negritas**, ***negritas cursivas***,  
~~tachado~~, superíndice^2^, subíndice~2~, `verbatim`   

Muy importante: Puedes hacer un salto de línea simple con dos espacios en blanco, o un salto de línea grande separando con 2 líneas.

Así, por ejemplo, el código markdown 
```{markdown}
Lorem ipsum
es aburrido.  
Esta es una nueva línea.

Este es un nuevo párrafo.
```

se mostrará como

Lorem ipsum
es aburrido.  
Esta es una nueva línea.

Este es un nuevo párrafo.

## Títulos

Se utiliza la clásica convención para `# Título`, `## Subtítulo`, ... , `###### Subsubsubsubsubsub-título`,

## Links

Los siguientes códigos permiten incrustar links
``` markdown  
<https://quarto.org>  
[Quarto](https://quarto.org) 
``` 

## Imágenes 

El código markdown para imágenes es similar a los links, pero usa un `!` para distinguirlos.
Es posible mezclar

```{.markdown}  
![Caption](elephant.png)  
![Caption](elephant.png "Elephant"){fig-alt="An elephant."}
``` 

Es posible hacer una imagen "clickeable" mezclando los códigos respectivos:
```{.markdown}  
[![Caption](elephant.png)](https://quarto.org)  
[![Caption](elephant.png "Elephant"){fig-alt="An elephant."}](https://quarto.org)
``` 

## Videos

Para incluir videos puedes usar el código `{{{< video >}}}` :

```{.markdown shortcodes="false"}
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
```


## Listas

+-----------------------------------+---------------------------------+
| Código en Markdown                | Output                          |
+===================================+=================================+
| ``` markdown                      |                                 |
| * unordered list                  | * unordered list                |
|     + sub-item 1                  |     + sub-item 1                |
|     + sub-item 2                  |     + sub-item 2                |
|         - sub-sub-item 1          |         - sub-sub-item 1        |
| ```                               |                                 |
+-----------------------------------+---------------------------------+
| ``` markdown                      |                                 |
| 1. ordered list                   |  1. ordered list                |
| 2. item 2                         |  2. item 2                      |
|     i) sub-item 1                 |      i) sub-item 1              |
|          A.  sub-sub-item 1       |           A.  sub-sub-item 1    |
| ```                               |                                 |
|                                   |                                 |
+-----------------------------------+---------------------------------+
| ``` markdown                      |                                 |
| (@)  A list whose numbering       |  (1) A list whose numbering     |
|                                   |                                 |
| continues after                   |  continues after                |
|                                   |                                 |
| (@)  an interruption              |  (2) an interruption            |
| ```                               |                                 |
+-----------------------------------+---------------------------------+
| ``` markdown                      |                                 |
| ::: {}                            | ::: {}                          |
| 1. A list                         | 1. A list                       |
| :::                               | :::                             |
|                                   |                                 |
| ::: {}                            | ::: {}                          |
| 1. Followed by another list       | 1. Followed by another list     |
| :::                               | :::                             |
| ```                               |                                 |
+-----------------------------------+---------------------------------+
| ``` markdown                      |                                 |
| term                              | term                            |
| : definition                      | : definition                    |
| ```                               |                                 |
+-----------------------------------+---------------------------------+

Notar que las listas necesitan una linea en blanco sobre la lista, de lo contrario no se mostrarán correctamente.

## Tablas

Las tablas siguen el formato clásico en markdown, y donde la alineación se define con `:`, como muestra el siguiente código:

``` markdown
| Derecha | Izquierda | Por Defecto | Centrada |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     1  |
```

que se mostrará así:

| Derecha | Izquierda | Por Defecto | Centrada |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

En el siguiente enlace hay más información: <https://quarto.org/docs/authoring/tables.html>.

## Código

Para delimitar bloques de código que se mostrar sin ejecutar se utiliza ```` ``` ````

```` markdown
```
código
```
````

Puedes añadir un lenguaje (python, markdown, html, javascript, etc) para resaltar correctamente la sintaxis del lenguaje. Así el siguiente código

```` markdown
```python
print("¡Que tal, festival!")
```
````

se verá así:
```python
print("¡Que tal, festival!")
```


Para delimitar bloques de código que se ejecutarán, como celdas en jupyter notebook/lab, se utilizan parentesis de llave encerrando el lenguaje, así por ejemplo el siguiente código
```` markdown
```{python}
print("¡Que tal, festival!")
```
````

que se verá así:
```{python}
print("¡Que tal, festival!")
```


## Ecuaciones

Utilice delimitadores `$` para las ecuaciones en línea y delimitadores `$$` para ecuaciones en línea propia. 

Así, por ejemplo `$E = mc^{2}$` se mostrará como $E=mc^{2}$.

Por otra parte, ```$$ E = mc^{2}$$``` se mostrará así
$$ E = mc^{2}$$

## Columnas

Es posible definir columnas de manera sencilla, usando `::::` y `:::`.

El siguiente código:
```{markdown}
:::: {.columns}

::: {.column width="40%"}
Columna izquierda...
:::

::: {.column width="60%"}
Columna derecha
:::

::::
```

Se mostrará así:

:::: {.columns}

::: {.column width="40%"}
Columna izquierda...
:::

::: {.column width="60%"}
Columna derecha
:::

::::



## Referencias
Este archivo está basado en <https://quarto.org/docs/authoring/markdown-basics.html>

* <https://quarto.org/docs/presentations/>: Información extra para presentaciones.
